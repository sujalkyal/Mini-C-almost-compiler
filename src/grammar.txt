// Updated LL(1) Grammar for Mini-C
// This grammar has been refined to eliminate conflicts and ambiguities

PROGRAM → MAIN_FUNCTION
MAIN_FUNCTION → int main ( ) { STATEMENT_LIST }
STATEMENT_LIST → STATEMENT STATEMENT_LIST | ε
STATEMENT → DECLARATION | ASSIGNMENT | LOOP | RETURN_STMT | ε
DECLARATION → TYPE IDENTIFIER DECLARATION_TAIL
DECLARATION_TAIL → = EXPRESSION ; | ;
TYPE → int | float
ASSIGNMENT → IDENTIFIER = EXPRESSION ;
LOOP → while ( CONDITION ) { STATEMENT_LIST }
CONDITION → EXPRESSION RELATIONAL_OP EXPRESSION
RELATIONAL_OP → < | > | <= | >= | == | !=
RETURN_STMT → return EXPRESSION ;
EXPRESSION → TERM EXPRESSION_TAIL
EXPRESSION_TAIL → + TERM EXPRESSION_TAIL | - TERM EXPRESSION_TAIL | ε
TERM → FACTOR TERM_TAIL
TERM_TAIL → * FACTOR TERM_TAIL | / FACTOR TERM_TAIL | ε
FACTOR → IDENTIFIER FACTOR_TAIL | INTEGER_LITERAL | FLOAT_LITERAL | ( EXPRESSION ) 
FACTOR_TAIL → ++ | -- | ε
